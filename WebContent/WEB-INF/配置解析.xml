<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		<context:annotation-config></context:annotation-config>
		<!-- 激活spring关于annotation的DI -->
		<!--  	注册 DefaultAnnotationHandlerMapping 和AnnotationMethodHandlerAdapter两个bean，
		及一系列缺省的messageconverter(需要classpath中有相应的lib包的支持)
				并且启用了controler中的url请求参数绑定参数绑定
		 -->
		<mvc:annotation-driven></mvc:annotation-driven>
		<!-- 注册HandlerInterceptors 或 WebRequestInterceptors 拦截器来拦截request请求 -->
		<mvc:interceptors>  
    		<mvc:interceptor>  
        		<mvc:mapping path="/*" />  
        		<bean class="p_spring事务.hasconfig.CustomerTransforHasConfig" />  
    		</mvc:interceptor>  
		</mvc:interceptors>  
		<!--将spring mvc的DispatcherServlet替换当前web server的缺省的Servlet。这样做的好处是定义spring mvc处理请求时，不再需要定义*.do,*.action,/action/*之类的url-pattern，
			而是可以直接定义为<url-pattern>/</url-pattern> （注意不是<url-pattern>/*</url-pattern>，/*将匹配所有请求而导致所有jsp和静态内容都无法正常显示，而/只匹配缺省的servlet）。 
    		常见web 容器的default servlet name spring mvc中都能自动识别，但对于不常见的web 容器或default servlet name 被改写过的，则需增加参数 default-servlet-name来指定对应的servlet name. 
			需与<mvc:annotation-driven/>一起使用  -->
		<mvc:default-servlet-handler/>
		<!-- 将指定路径的请求直接转到对应的view上，而不需要特定的controller来处理请求 -->
		<mvc:view-controller path="/hello/*" view-name="helloWorld"/>  
		<!-- 将指定URL 的匹配模式来访问静态文件 -->
		<mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="3600"/>  
</beans>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 植入数据库链接池 -->
	<bean id="myc3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ceshi"/>
		<property name="user" value="root"></property>
		<property name="password" value="14159265jkl"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="maxPoolSize" value="40"></property>
		<property name="initialPoolSize" value="2"></property>
		<property name="maxIdleTime" value="30"></property>
	</bean>
	<!-- 植入将要被事务增强的代理类 (spring定义的)-->
	<!--<bean id="mycustom" class="p_spring事务.hasconfig.CustomerTransforHasConfig">
	</bean>-->
	<!-- 植入数据库操作类 -->
	<bean id="MyJdbcBusiness" class="p_spring事务.JDBC_Business">
		<property name="dataSource" ref="myc3p0"></property>
	</bean>
	<!-- 植入数据库代理类管理者 (spring定义的)-->
	<bean id="myTransactionMamager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myc3p0"></property>
	</bean>
	<!-- 注册要进行事务增强处理的真实类   真正实现暴露在外面的接口 -->
	<bean id="mycustomerTransfer" class="p_spring事务.hasconfig.CustomerTransforHasConfig">
		<property name="jDBC_Business" ref="MyJdbcBusiness"></property>
	</bean>
	<!-- 注册事务增强 -->
	<tx:advice id="txadvice" transaction-manager="myTransactionMamager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* p_spring事务.hasconfig.*.*(..))" id="pointcut1"/>
		<aop:advisor advice-ref="txadvice" pointcut-ref="pointcut1"/>
	</aop:config>
</beans>
